# 端口号
VITE_PORT=5668

VITE_BASE=/

# ==================== Mock 策略配置 ====================
# 详细说明: 查看 docs/MOCK_STRATEGY.md
#
# 架构说明 (统一使用 backend-mock):
# - 所有 Mock 数据都由 backend-mock 服务提供
# - 不再使用前端内置 Mock 逻辑
# - 通过环境变量控制哪些 API 使用 Mock，哪些使用真实后端
#
# 推荐配置 (纯前端开发):
# 1. 启动 backend-mock: pnpm -F @vben/backend-mock run start
# 2. 设置: VITE_NITRO_MOCK=true, VITE_USE_K8S_MOCK=false, VITE_USE_CORE_MOCK=false
# 3. 所有 API (认证 + K8s) 都走 backend-mock 服务
#
# 混合配置 (部分 Mock + 部分真实):
# - K8s 使用 Mock: VITE_USE_K8S_MOCK=false (路由到 backend-mock)
# - 认证使用真实: VITE_USE_CORE_MOCK=false, VITE_GLOB_API_URL=http://real-backend
# ======================================================

# 接口地址
VITE_GLOB_API_URL=/api

# 是否开启 Nitro Mock 服务 (backend-mock)
# - true: Vite 代理 /api 到 http://localhost:5320 (backend-mock)
# - false: 使用 VITE_GLOB_API_URL 配置的真实地址
VITE_NITRO_MOCK=true

# 是否开启 K8s API Mock 模式
# - true: 使用前端内置 Mock (支持部分资源如 Secret)
# - false: 路由到 backend-mock 或真实 API (推荐)
# 注意: backend-mock 目前支持 clusters, pods, nodes, deployments
#       其他资源(secrets, services, configmaps等)需要使用前端 Mock
VITE_USE_K8S_MOCK=false

# 是否开启核心 API Mock 模式 (认证、用户信息等)
# - true: 使用前端内置 Mock (已废弃，不推荐)
# - false: 路由到 backend-mock 或真实 API (推荐)
# 注意: 如果未设置此变量，将跟随 VITE_NITRO_MOCK 的设置
VITE_USE_CORE_MOCK=false

# 是否打开 devtools,true 为打开,false 为关闭
VITE_DEVTOOLS=false

# 是否注入全局loading
VITE_INJECT_APP_LOADING=true
