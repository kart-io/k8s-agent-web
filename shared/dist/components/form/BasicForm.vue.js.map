{"version":3,"file":"BasicForm.vue.js","sources":["../../../src/components/form/BasicForm.vue"],"sourcesContent":["<template>\n  <a-form\n    ref=\"formRef\"\n    :model=\"formModel\"\n    :rules=\"formRules\"\n    :label-col=\"labelCol\"\n    :wrapper-col=\"wrapperCol\"\n    v-bind=\"$attrs\"\n  >\n    <a-row :gutter=\"gutter\">\n      <template v-for=\"schema in schemas\" :key=\"schema.field\">\n        <a-col v-if=\"!schema.hidden\" :span=\"schema.colSpan || defaultColSpan\">\n          <a-form-item\n            :label=\"schema.label\"\n            :name=\"schema.field\"\n            :label-col=\"schema.labelCol || labelCol\"\n            :wrapper-col=\"schema.wrapperCol || wrapperCol\"\n          >\n            <!-- 输入框 -->\n            <a-input\n              v-if=\"schema.component === 'Input'\"\n              v-model:value=\"formModel[schema.field]\"\n              :placeholder=\"schema.placeholder || `请输入${schema.label}`\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 密码输入框 -->\n            <a-input-password\n              v-else-if=\"schema.component === 'InputPassword'\"\n              v-model:value=\"formModel[schema.field]\"\n              :placeholder=\"schema.placeholder || `请输入${schema.label}`\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 文本域 -->\n            <a-textarea\n              v-else-if=\"schema.component === 'Textarea'\"\n              v-model:value=\"formModel[schema.field]\"\n              :placeholder=\"schema.placeholder || `请输入${schema.label}`\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 数字输入框 -->\n            <a-input-number\n              v-else-if=\"schema.component === 'InputNumber'\"\n              v-model:value=\"formModel[schema.field]\"\n              :placeholder=\"schema.placeholder || `请输入${schema.label}`\"\n              style=\"width: 100%\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 选择框 -->\n            <a-select\n              v-else-if=\"schema.component === 'Select'\"\n              v-model:value=\"formModel[schema.field]\"\n              :placeholder=\"schema.placeholder || `请选择${schema.label}`\"\n              :options=\"schema.options\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 多选框组 -->\n            <a-checkbox-group\n              v-else-if=\"schema.component === 'CheckboxGroup'\"\n              v-model:value=\"formModel[schema.field]\"\n              :options=\"schema.options\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 单选框组 -->\n            <a-radio-group\n              v-else-if=\"schema.component === 'RadioGroup'\"\n              v-model:value=\"formModel[schema.field]\"\n              :options=\"schema.options\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 开关 -->\n            <a-switch\n              v-else-if=\"schema.component === 'Switch'\"\n              v-model:checked=\"formModel[schema.field]\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 日期选择器 -->\n            <a-date-picker\n              v-else-if=\"schema.component === 'DatePicker'\"\n              v-model:value=\"formModel[schema.field]\"\n              :placeholder=\"schema.placeholder || `请选择${schema.label}`\"\n              style=\"width: 100%\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 时间选择器 -->\n            <a-time-picker\n              v-else-if=\"schema.component === 'TimePicker'\"\n              v-model:value=\"formModel[schema.field]\"\n              :placeholder=\"schema.placeholder || `请选择${schema.label}`\"\n              style=\"width: 100%\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 日期范围选择器 -->\n            <a-range-picker\n              v-else-if=\"schema.component === 'RangePicker'\"\n              v-model:value=\"formModel[schema.field]\"\n              style=\"width: 100%\"\n              v-bind=\"schema.componentProps\"\n            />\n\n            <!-- 自定义插槽 -->\n            <slot\n              v-else-if=\"schema.slot\"\n              :name=\"schema.slot\"\n              :model=\"formModel\"\n              :field=\"schema.field\"\n              :schema=\"schema\"\n            />\n          </a-form-item>\n        </a-col>\n      </template>\n\n      <!-- 操作按钮 -->\n      <a-col v-if=\"showActionButtons\" :span=\"actionColSpan\">\n        <a-form-item :wrapper-col=\"{ offset: labelCol.span }\">\n          <slot name=\"actions\" :submit=\"handleSubmit\" :reset=\"handleReset\">\n            <a-space>\n              <a-button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">\n                {{ submitText }}\n              </a-button>\n              <a-button @click=\"handleReset\">{{ resetText }}</a-button>\n            </a-space>\n          </slot>\n        </a-form-item>\n      </a-col>\n    </a-row>\n  </a-form>\n</template>\n\n<script setup>\nimport { ref, reactive, watch, computed } from 'vue'\n\nconst props = defineProps({\n  // 表单配置项\n  schemas: {\n    type: Array,\n    default: () => []\n  },\n  // 表单数据\n  model: {\n    type: Object,\n    default: () => ({})\n  },\n  // 表单验证规则\n  rules: {\n    type: Object,\n    default: () => ({})\n  },\n  // 标签布局\n  labelCol: {\n    type: Object,\n    default: () => ({ span: 6 })\n  },\n  // 控件布局\n  wrapperCol: {\n    type: Object,\n    default: () => ({ span: 18 })\n  },\n  // 栅格间距\n  gutter: {\n    type: Number,\n    default: 16\n  },\n  // 默认列跨度\n  defaultColSpan: {\n    type: Number,\n    default: 24\n  },\n  // 是否显示操作按钮\n  showActionButtons: {\n    type: Boolean,\n    default: true\n  },\n  // 操作按钮列跨度\n  actionColSpan: {\n    type: Number,\n    default: 24\n  },\n  // 提交按钮文本\n  submitText: {\n    type: String,\n    default: '提交'\n  },\n  // 重置按钮文本\n  resetText: {\n    type: String,\n    default: '重置'\n  },\n  // 提交加载状态\n  submitLoading: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['submit', 'reset', 'update:model', 'register'])\n\n// 表单引用\nconst formRef = ref(null)\n\n// 表单数据\nconst formModel = reactive({ ...props.model })\n\n// 监听外部 model 变化\nwatch(() => props.model, (newVal) => {\n  Object.assign(formModel, newVal)\n}, { deep: true })\n\n// 监听内部 model 变化，同步到外部\nwatch(formModel, (newVal) => {\n  emit('update:model', newVal)\n}, { deep: true })\n\n// 表单规则\nconst formRules = computed(() => {\n  const rules = { ...props.rules }\n\n  // 从 schemas 中提取规则\n  props.schemas.forEach(schema => {\n    if (schema.rules) {\n      rules[schema.field] = schema.rules\n    } else if (schema.required) {\n      rules[schema.field] = [\n        {\n          required: true,\n          message: `${schema.label}不能为空`,\n          trigger: schema.component === 'Select' ? 'change' : 'blur'\n        }\n      ]\n    }\n  })\n\n  return rules\n})\n\n// 提交\nconst handleSubmit = async () => {\n  try {\n    await formRef.value.validate()\n    emit('submit', formModel)\n  } catch (error) {\n    console.error('表单验证失败:', error)\n  }\n}\n\n// 重置\nconst handleReset = () => {\n  formRef.value.resetFields()\n  emit('reset')\n}\n\n// 验证\nconst validate = async () => {\n  return await formRef.value.validate()\n}\n\n// 验证指定字段\nconst validateFields = async (fields) => {\n  return await formRef.value.validateFields(fields)\n}\n\n// 清除验证\nconst clearValidate = (fields) => {\n  formRef.value.clearValidate(fields)\n}\n\n// 重置字段\nconst resetFields = (fields) => {\n  formRef.value.resetFields(fields)\n}\n\n// 设置字段值\nconst setFieldsValue = (values) => {\n  Object.assign(formModel, values)\n}\n\n// 获取字段值\nconst getFieldsValue = () => {\n  return { ...formModel }\n}\n\n// 暴露方法\ndefineExpose({\n  validate,\n  validateFields,\n  clearValidate,\n  resetFields,\n  setFieldsValue,\n  getFieldsValue,\n  formRef\n})\n\n// 注册表单实例\nemit('register', {\n  validate,\n  validateFields,\n  clearValidate,\n  resetFields,\n  setFieldsValue,\n  getFieldsValue\n})\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI;;AAExB;AACA,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE;;AAE7C;AACA,KAAK,CAAC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK;AACrC,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM;AACjC,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;;AAEjB;AACA,KAAK,CAAC,SAAS,EAAE,CAAC,MAAM,KAAK;AAC7B,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM;AAC7B,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;;AAEjB;AACA,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM;AACjC,EAAE,MAAM,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC,KAAK;;AAEhC;AACA,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI;AAClC,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;AACtB,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;AACnC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;AAChC,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG;AAC5B,QAAQ;AACR,UAAU,QAAQ,EAAE,IAAI;AACxB,UAAU,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;AACxC,UAAU,OAAO,EAAE,MAAM,CAAC,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG;AAC9D;AACA;AACA,IAAI;AACJ,EAAE,CAAC;;AAEH,EAAE,OAAO;AACT,CAAC;;AAED;AACA,MAAM,YAAY,GAAG,YAAY;AACjC,EAAE,IAAI;AACN,IAAI,MAAM,OAAO,CAAC,KAAK,CAAC,QAAQ;AAChC,IAAI,IAAI,CAAC,QAAQ,EAAE,SAAS;AAC5B,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK;AAClC,EAAE;AACF;;AAEA;AACA,MAAM,WAAW,GAAG,MAAM;AAC1B,EAAE,OAAO,CAAC,KAAK,CAAC,WAAW;AAC3B,EAAE,IAAI,CAAC,OAAO;AACd;;AAEA;AACA,MAAM,QAAQ,GAAG,YAAY;AAC7B,EAAE,OAAO,MAAM,OAAO,CAAC,KAAK,CAAC,QAAQ;AACrC;;AAEA;AACA,MAAM,cAAc,GAAG,OAAO,MAAM,KAAK;AACzC,EAAE,OAAO,MAAM,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM;AAClD;;AAEA;AACA,MAAM,aAAa,GAAG,CAAC,MAAM,KAAK;AAClC,EAAE,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM;AACpC;;AAEA;AACA,MAAM,WAAW,GAAG,CAAC,MAAM,KAAK;AAChC,EAAE,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM;AAClC;;AAEA;AACA,MAAM,cAAc,GAAG,CAAC,MAAM,KAAK;AACnC,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM;AACjC;;AAEA;AACA,MAAM,cAAc,GAAG,MAAM;AAC7B,EAAE,OAAO,EAAE,GAAG,SAAS;AACvB;;AAEA;AACA,QAAY,CAAC;AACb,EAAE,QAAQ;AACV,EAAE,cAAc;AAChB,EAAE,aAAa;AACf,EAAE,WAAW;AACb,EAAE,cAAc;AAChB,EAAE,cAAc;AAChB,EAAE;AACF,CAAC;;AAED;AACA,IAAI,CAAC,UAAU,EAAE;AACjB,EAAE,QAAQ;AACV,EAAE,cAAc;AAChB,EAAE,aAAa;AACf,EAAE,WAAW;AACb,EAAE,cAAc;AAChB,EAAE;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}