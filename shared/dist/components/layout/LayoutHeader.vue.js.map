{"version":3,"file":"LayoutHeader.vue.js","sources":["../../../src/components/layout/LayoutHeader.vue"],"sourcesContent":["<template>\n  <div class=\"layout-header\">\n    <!-- Logo 和折叠按钮 -->\n    <div class=\"header-left\">\n      <div v-if=\"showLogo\" class=\"logo\">\n        <slot name=\"logo\">\n          {{ logoText }}\n        </slot>\n      </div>\n      <a-button\n        v-if=\"showTrigger\"\n        type=\"text\"\n        class=\"trigger\"\n        @click=\"toggleCollapsed\"\n      >\n        <MenuFoldOutlined v-if=\"!collapsed\" />\n        <MenuUnfoldOutlined v-else />\n      </a-button>\n    </div>\n\n    <!-- 面包屑 -->\n    <div v-if=\"showBreadcrumb\" class=\"header-breadcrumb\">\n      <a-breadcrumb>\n        <a-breadcrumb-item v-for=\"item in breadcrumbList\" :key=\"item.path\">\n          <component :is=\"getIcon(item.icon)\" v-if=\"item.icon\" />\n          <span v-if=\"item.path\" class=\"breadcrumb-link\" @click=\"handleBreadcrumbClick(item)\">\n            {{ item.label }}\n          </span>\n          <span v-else>{{ item.label }}</span>\n        </a-breadcrumb-item>\n      </a-breadcrumb>\n    </div>\n\n    <!-- 右侧操作区 -->\n    <div class=\"header-actions\">\n      <slot name=\"actions\">\n        <!-- 搜索 -->\n        <a-tooltip title=\"搜索\">\n          <a-button type=\"text\" class=\"action-btn\">\n            <SearchOutlined />\n          </a-button>\n        </a-tooltip>\n\n        <!-- 全屏 -->\n        <a-tooltip :title=\"isFullscreen ? '退出全屏' : '全屏'\">\n          <a-button type=\"text\" class=\"action-btn\" @click=\"toggleFullscreen\">\n            <FullscreenExitOutlined v-if=\"isFullscreen\" />\n            <FullscreenOutlined v-else />\n          </a-button>\n        </a-tooltip>\n\n        <!-- 通知 -->\n        <a-badge :count=\"notificationCount\" :offset=\"[-5, 5]\">\n          <a-button type=\"text\" class=\"action-btn\">\n            <BellOutlined />\n          </a-button>\n        </a-badge>\n\n        <!-- 用户信息 -->\n        <a-dropdown placement=\"bottomRight\">\n          <div class=\"user-dropdown\">\n            <a-avatar :size=\"32\" :src=\"userAvatar\">\n              {{ userName?.[0] }}\n            </a-avatar>\n            <span class=\"user-name\">{{ userName }}</span>\n          </div>\n          <template #overlay>\n            <a-menu @click=\"handleUserMenuClick\">\n              <a-menu-item key=\"profile\">\n                <UserOutlined />\n                个人中心\n              </a-menu-item>\n              <a-menu-item key=\"settings\">\n                <SettingOutlined />\n                系统设置\n              </a-menu-item>\n              <a-menu-divider />\n              <a-menu-item key=\"logout\">\n                <LogoutOutlined />\n                退出登录\n              </a-menu-item>\n            </a-menu>\n          </template>\n        </a-dropdown>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  SearchOutlined,\n  FullscreenOutlined,\n  FullscreenExitOutlined,\n  BellOutlined,\n  UserOutlined,\n  SettingOutlined,\n  LogoutOutlined\n} from '@ant-design/icons-vue'\nimport { getIconComponent } from '../../utils'\n\nconst props = defineProps({\n  collapsed: {\n    type: Boolean,\n    default: false\n  },\n  showLogo: {\n    type: Boolean,\n    default: true\n  },\n  showTrigger: {\n    type: Boolean,\n    default: true\n  },\n  showBreadcrumb: {\n    type: Boolean,\n    default: true\n  },\n  logoText: {\n    type: String,\n    default: 'Vben Admin'\n  },\n  userName: {\n    type: String,\n    default: 'Admin'\n  },\n  userAvatar: {\n    type: String,\n    default: ''\n  },\n  breadcrumbList: {\n    type: Array,\n    default: () => []\n  },\n  notificationCount: {\n    type: Number,\n    default: 0\n  }\n})\n\nconst emit = defineEmits(['update:collapsed', 'user-menu-click', 'breadcrumb-click'])\n\nconst router = useRouter()\nconst isFullscreen = ref(false)\n\nconst toggleCollapsed = () => {\n  emit('update:collapsed', !props.collapsed)\n}\n\nconst getIcon = (iconName) => {\n  if (!iconName) return null\n  return getIconComponent(iconName)\n}\n\nconst toggleFullscreen = () => {\n  if (!document.fullscreenElement) {\n    document.documentElement.requestFullscreen()\n    isFullscreen.value = true\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen()\n      isFullscreen.value = false\n    }\n  }\n}\n\nconst handleUserMenuClick = ({ key }) => {\n  emit('user-menu-click', key)\n}\n\nconst handleBreadcrumbClick = (item) => {\n  if (item.path) {\n    emit('breadcrumb-click', item)\n    router.push(item.path)\n  }\n}\n\n// 监听全屏变化\ndocument.addEventListener('fullscreenchange', () => {\n  isFullscreen.value = !!document.fullscreenElement\n})\n</script>\n\n<style scoped lang=\"scss\">\n.layout-header {\n  display: flex;\n  align-items: center;\n  height: 48px;\n  padding: 0;\n  background: #fff;\n  box-shadow: 0 1px 4px rgba(0, 21, 41, 0.08);\n  position: relative;\n  z-index: 10;\n  transition: all 0.2s;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  padding-left: 0;\n}\n\n.logo {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1890ff;\n  margin-right: 16px;\n  white-space: nowrap;\n  padding-left: 16px;\n}\n\n.trigger {\n  font-size: 18px;\n  padding: 0 12px;\n  height: 48px;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.025);\n  }\n}\n\n.header-breadcrumb {\n  flex: 1;\n  padding: 0 12px;\n  overflow: hidden;\n\n  :deep(.ant-breadcrumb) {\n    font-size: 14px;\n  }\n\n  .breadcrumb-link {\n    cursor: pointer;\n    transition: color 0.2s;\n\n    &:hover {\n      color: #1890ff;\n    }\n  }\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  padding-right: 16px;\n  gap: 4px;\n}\n\n.action-btn {\n  font-size: 18px;\n  padding: 0 12px;\n  height: 48px;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: rgba(0, 0, 0, 0.65);\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.025);\n    color: #1890ff;\n  }\n}\n\n.user-dropdown {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 0 12px;\n  height: 48px;\n  cursor: pointer;\n  transition: all 0.2s;\n  border-radius: 4px;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.025);\n  }\n\n  .user-name {\n    font-size: 14px;\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    color: rgba(0, 0, 0, 0.85);\n    font-weight: 500;\n  }\n}\n\n:deep(.ant-avatar) {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n:deep(.ant-badge) {\n  .ant-badge-count {\n    box-shadow: 0 0 0 1px #fff;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA,MAAM,MAAM,GAAG,SAAS;AACxB,MAAM,YAAY,GAAG,GAAG,CAAC,KAAK;;AAE9B,MAAM,eAAe,GAAG,MAAM;AAC9B,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,SAAS;AAC3C;;AAEA,MAAM,OAAO,GAAG,CAAC,QAAQ,KAAK;AAC9B,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO;AACxB,EAAE,OAAO,gBAAgB,CAAC,QAAQ;AAClC;;AAEA,MAAM,gBAAgB,GAAG,MAAM;AAC/B,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE;AACnC,IAAI,QAAQ,CAAC,eAAe,CAAC,iBAAiB;AAC9C,IAAI,YAAY,CAAC,KAAK,GAAG;AACzB,EAAE,CAAC,MAAM;AACT,IAAI,IAAI,QAAQ,CAAC,cAAc,EAAE;AACjC,MAAM,QAAQ,CAAC,cAAc;AAC7B,MAAM,YAAY,CAAC,KAAK,GAAG;AAC3B,IAAI;AACJ,EAAE;AACF;;AAEA,MAAM,mBAAmB,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK;AACzC,EAAE,IAAI,CAAC,iBAAiB,EAAE,GAAG;AAC7B;;AAEA,MAAM,qBAAqB,GAAG,CAAC,IAAI,KAAK;AACxC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;AACjB,IAAI,IAAI,CAAC,kBAAkB,EAAE,IAAI;AACjC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;AACzB,EAAE;AACF;;AAEA;AACA,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;AACpD,EAAE,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC;AAClC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}