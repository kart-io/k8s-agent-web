{"version":3,"file":"useSharedState.js","sources":["../../src/composables/useSharedState.js"],"sourcesContent":["/**\n * useSharedState Composable\n *\n * Vue 3 composable for using shared state across micro-apps.\n * Provides reactive state that automatically syncs across all micro-apps.\n *\n * @example\n * // In any micro-app component\n * import { useSharedState } from '@k8s-agent/shared/composables/useSharedState'\n *\n * const { state: userInfo, setState: setUserInfo } = useSharedState('user', 'info', {})\n *\n * // Update state (will sync to all other micro-apps)\n * setUserInfo({ id: 123, name: 'Alice', avatar: '/avatars/alice.png' })\n *\n * // Use in template\n * <img :src=\"userInfo.avatar\" />\n */\n\nimport { ref, onUnmounted } from 'vue'\n\n/**\n * Use shared state across micro-apps\n *\n * @param {string} namespace - State namespace (e.g., 'user', 'notification', 'permission', 'system')\n * @param {string} key - State key within namespace\n * @param {*} defaultValue - Default value if state doesn't exist\n * @returns {Object} { state: Ref, setState: Function }\n *\n * @example\n * // User info state\n * const { state: userInfo, setState: setUserInfo } = useSharedState('user', 'info', {})\n *\n * @example\n * // Notification count\n * const { state: unreadCount, setState: setUnreadCount } = useSharedState('notification', 'unreadCount', 0)\n *\n * @example\n * // System theme\n * const { state: theme, setState: setTheme } = useSharedState('system', 'theme', 'light')\n */\nexport function useSharedState(namespace, key, defaultValue) {\n  // Initialize reactive state\n  const state = ref(defaultValue)\n\n  // Get Wujie bus (may not be available in standalone mode)\n  const bus = window.$wujie?.bus\n\n  if (!bus) {\n    console.warn(\n      `[useSharedState] Wujie bus not available for ${namespace}:${key}, using local state only`\n    )\n\n    // Return local-only state if bus is not available\n    const setState = (value) => {\n      state.value = value\n    }\n\n    return { state, setState }\n  }\n\n  /**\n   * Update shared state and broadcast to all micro-apps\n   *\n   * @param {*} value - New value\n   */\n  const setState = (value) => {\n    // Update local state immediately\n    state.value = value\n\n    // Emit event to broadcast to all micro-apps\n    try {\n      bus.$emit('state:update', {\n        namespace,\n        key,\n        value,\n        timestamp: Date.now()\n      })\n\n      console.log(`[useSharedState] State updated: ${namespace}:${key}`, value)\n    } catch (error) {\n      console.error(`[useSharedState] Failed to emit state update for ${namespace}:${key}:`, error)\n    }\n  }\n\n  /**\n   * Listen for state updates from other micro-apps\n   */\n  const stateUpdateListener = (payload) => {\n    // Only update if this is the state we're watching\n    if (payload.namespace === namespace && payload.key === key) {\n      state.value = payload.value\n      console.log(`[useSharedState] Received state update: ${namespace}:${key}`, payload.value)\n    }\n  }\n\n  // Register listener\n  bus.$on('state:update', stateUpdateListener)\n\n  // Cleanup listener on component unmount\n  onUnmounted(() => {\n    if (bus) {\n      bus.$off('state:update', stateUpdateListener)\n      console.log(`[useSharedState] Unsubscribed from ${namespace}:${key}`)\n    }\n  })\n\n  // Return reactive state and setter\n  return {\n    state,\n    setState\n  }\n}\n\n/**\n * Use multiple shared states at once\n *\n * @param {Array<{namespace: string, key: string, defaultValue: *}>} states - Array of state configurations\n * @returns {Object} Object with keys as 'namespace_key' and values as {state, setState}\n *\n * @example\n * const {\n *   user_info: { state: userInfo, setState: setUserInfo },\n *   notification_count: { state: notifCount, setState: setNotifCount }\n * } = useMultipleSharedStates([\n *   { namespace: 'user', key: 'info', defaultValue: {} },\n *   { namespace: 'notification', key: 'count', defaultValue: 0 }\n * ])\n */\nexport function useMultipleSharedStates(states) {\n  const result = {}\n\n  for (const { namespace, key, defaultValue } of states) {\n    const stateKey = `${namespace}_${key}`\n    result[stateKey] = useSharedState(namespace, key, defaultValue)\n  }\n\n  return result\n}\n\nexport default useSharedState\n"],"names":[],"mappings":"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"}