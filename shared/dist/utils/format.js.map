{"version":3,"file":"format.js","sources":["../../src/utils/format.js"],"sourcesContent":["/**\n * 格式化工具函数\n */\n\n/**\n * 格式化文件大小\n * @param {Number} size - 字节大小\n * @param {Number} decimals - 小数位数\n * @returns {String} 格式化后的大小\n */\nexport function formatFileSize(size, decimals = 2) {\n  if (size === 0) return '0 Bytes'\n\n  const k = 1024\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB']\n\n  const i = Math.floor(Math.log(size) / Math.log(k))\n\n  return parseFloat((size / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i]\n}\n\n/**\n * 格式化数字（千分位）\n * @param {Number} num - 数字\n * @param {Number} decimals - 小数位数\n * @returns {String} 格式化后的数字\n */\nexport function formatNumber(num, decimals = 0) {\n  if (num === null || num === undefined) return '-'\n\n  const parts = num.toFixed(decimals).split('.')\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n\n  return parts.join('.')\n}\n\n/**\n * 格式化金额\n * @param {Number} amount - 金额\n * @param {String} currency - 货币符号\n * @param {Number} decimals - 小数位数\n * @returns {String} 格式化后的金额\n */\nexport function formatCurrency(amount, currency = '¥', decimals = 2) {\n  return currency + formatNumber(amount, decimals)\n}\n\n/**\n * 格式化百分比\n * @param {Number} value - 值\n * @param {Number} total - 总值\n * @param {Number} decimals - 小数位数\n * @returns {String} 格式化后的百分比\n */\nexport function formatPercent(value, total, decimals = 2) {\n  if (!total || total === 0) return '0%'\n\n  const percent = (value / total) * 100\n  return percent.toFixed(decimals) + '%'\n}\n\n/**\n * 格式化手机号\n * @param {String} phone - 手机号\n * @returns {String} 格式化后的手机号\n */\nexport function formatPhone(phone) {\n  if (!phone) return '-'\n\n  const cleaned = ('' + phone).replace(/\\D/g, '')\n  const match = cleaned.match(/^(\\d{3})(\\d{4})(\\d{4})$/)\n\n  if (match) {\n    return match[1] + ' ' + match[2] + ' ' + match[3]\n  }\n\n  return phone\n}\n\n/**\n * 隐藏手机号中间四位\n * @param {String} phone - 手机号\n * @returns {String} 隐藏后的手机号\n */\nexport function hidePhone(phone) {\n  if (!phone) return '-'\n\n  return phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2')\n}\n\n/**\n * 隐藏邮箱部分字符\n * @param {String} email - 邮箱\n * @returns {String} 隐藏后的邮箱\n */\nexport function hideEmail(email) {\n  if (!email) return '-'\n\n  const parts = email.split('@')\n  if (parts.length !== 2) return email\n\n  const name = parts[0]\n  const domain = parts[1]\n\n  const visibleLength = Math.max(1, Math.floor(name.length / 3))\n  const hiddenPart = name.substring(visibleLength, name.length - visibleLength)\n\n  return name.substring(0, visibleLength) + '*'.repeat(hiddenPart.length) + name.substring(name.length - visibleLength) + '@' + domain\n}\n\n/**\n * 隐藏身份证号部分字符\n * @param {String} idCard - 身份证号\n * @returns {String} 隐藏后的身份证号\n */\nexport function hideIdCard(idCard) {\n  if (!idCard) return '-'\n\n  return idCard.replace(/(\\d{6})\\d{8}(\\d{4})/, '$1********$2')\n}\n\n/**\n * 格式化银行卡号\n * @param {String} cardNumber - 银行卡号\n * @returns {String} 格式化后的银行卡号\n */\nexport function formatBankCard(cardNumber) {\n  if (!cardNumber) return '-'\n\n  const cleaned = ('' + cardNumber).replace(/\\D/g, '')\n  return cleaned.replace(/(\\d{4})(?=\\d)/g, '$1 ')\n}\n\n/**\n * 首字母大写\n * @param {String} str - 字符串\n * @returns {String} 首字母大写的字符串\n */\nexport function capitalize(str) {\n  if (!str) return ''\n\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\n/**\n * 驼峰转下划线\n * @param {String} str - 驼峰字符串\n * @returns {String} 下划线字符串\n */\nexport function camelToSnake(str) {\n  return str.replace(/([A-Z])/g, '_$1').toLowerCase()\n}\n\n/**\n * 下划线转驼峰\n * @param {String} str - 下划线字符串\n * @returns {String} 驼峰字符串\n */\nexport function snakeToCamel(str) {\n  return str.replace(/_([a-z])/g, (match, letter) => letter.toUpperCase())\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,EAAE;AACnD,EAAE,IAAI,IAAI,KAAK,CAAC,EAAE,OAAO,SAAS;AAClC;AACA,EAAE,MAAM,CAAC,GAAG,KAAI;AAChB,EAAE,MAAM,EAAE,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,SAAQ;AACxC,EAAE,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC;AACvD;AACA,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;AACpD;AACA,EAAE,OAAO,UAAU,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;AACzE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,GAAG,EAAE,QAAQ,GAAG,CAAC,EAAE;AAChD,EAAE,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE,OAAO,GAAG;AACnD;AACA,EAAE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,EAAC;AAChD,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,EAAC;AAC3D;AACA,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AACxB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,MAAM,EAAE,QAAQ,GAAG,GAAG,EAAE,QAAQ,GAAG,CAAC,EAAE;AACrE,EAAE,OAAO,QAAQ,GAAG,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;AAClD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,GAAG,CAAC,EAAE;AAC1D,EAAE,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI;AACxC;AACA,EAAE,MAAM,OAAO,GAAG,CAAC,KAAK,GAAG,KAAK,IAAI,IAAG;AACvC,EAAE,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,GAAG;AACxC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,KAAK,EAAE;AACnC,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,GAAG;AACxB;AACA,EAAE,MAAM,OAAO,GAAG,CAAC,EAAE,GAAG,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,EAAC;AACjD,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAC;AACxD;AACA,EAAE,IAAI,KAAK,EAAE;AACb,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;AACrD,GAAG;AACH;AACA,EAAE,OAAO,KAAK;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,GAAG;AACxB;AACA,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,qBAAqB,EAAE,UAAU,CAAC;AACzD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,GAAG;AACxB;AACA,EAAE,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAC;AAChC,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;AACtC;AACA,EAAE,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,EAAC;AACvB,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,EAAC;AACzB;AACA,EAAE,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;AAChE,EAAE,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,GAAG,aAAa,EAAC;AAC/E;AACA,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,GAAG,GAAG,MAAM;AACtI,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,MAAM,EAAE;AACnC,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,GAAG;AACzB;AACA,EAAE,OAAO,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,cAAc,CAAC;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,UAAU,EAAE;AAC3C,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,GAAG;AAC7B;AACA,EAAE,MAAM,OAAO,GAAG,CAAC,EAAE,GAAG,UAAU,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,EAAC;AACtD,EAAE,OAAO,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,GAAG,EAAE;AAChC,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE;AACrB;AACA,EAAE,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACnD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,GAAG,EAAE;AAClC,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE;AACrD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,GAAG,EAAE;AAClC,EAAE,OAAO,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,MAAM,CAAC,WAAW,EAAE,CAAC;AAC1E;;;;"}