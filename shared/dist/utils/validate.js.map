{"version":3,"file":"validate.js","sources":["../../src/utils/validate.js"],"sourcesContent":["/**\n * 表单验证工具函数\n */\n\n/**\n * 验证邮箱\n */\nexport function validateEmail(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const reg = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n  if (!reg.test(value)) {\n    callback(new Error('请输入正确的邮箱地址'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证手机号\n */\nexport function validatePhone(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const reg = /^1[3-9]\\d{9}$/\n  if (!reg.test(value)) {\n    callback(new Error('请输入正确的手机号码'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证身份证号\n */\nexport function validateIdCard(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\n  if (!reg.test(value)) {\n    callback(new Error('请输入正确的身份证号码'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证密码强度\n * 至少8位，包含大小写字母、数字和特殊字符\n */\nexport function validatePassword(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const minLength = 8\n  const hasUpperCase = /[A-Z]/.test(value)\n  const hasLowerCase = /[a-z]/.test(value)\n  const hasNumber = /\\d/.test(value)\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(value)\n\n  if (value.length < minLength) {\n    callback(new Error(`密码长度至少${minLength}位`))\n  } else if (!(hasUpperCase && hasLowerCase && hasNumber && hasSpecialChar)) {\n    callback(new Error('密码必须包含大小写字母、数字和特殊字符'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证URL\n */\nexport function validateUrl(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const reg = /^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/i\n  if (!reg.test(value)) {\n    callback(new Error('请输入正确的URL地址'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证IP地址\n */\nexport function validateIP(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const reg = /^((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/\n  if (!reg.test(value)) {\n    callback(new Error('请输入正确的IP地址'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证端口号\n */\nexport function validatePort(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const port = parseInt(value, 10)\n  if (isNaN(port) || port < 1 || port > 65535) {\n    callback(new Error('端口号范围为1-65535'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证中文\n */\nexport function validateChinese(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const reg = /^[\\u4e00-\\u9fa5]+$/\n  if (!reg.test(value)) {\n    callback(new Error('请输入中文'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证英文字母\n */\nexport function validateEnglish(rule, value, callback) {\n  if (!value) {\n    callback()\n    return\n  }\n\n  const reg = /^[a-zA-Z]+$/\n  if (!reg.test(value)) {\n    callback(new Error('请输入英文字母'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证数字\n */\nexport function validateNumber(rule, value, callback) {\n  if (!value && value !== 0) {\n    callback()\n    return\n  }\n\n  if (isNaN(Number(value))) {\n    callback(new Error('请输入数字'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证整数\n */\nexport function validateInteger(rule, value, callback) {\n  if (!value && value !== 0) {\n    callback()\n    return\n  }\n\n  const reg = /^-?\\d+$/\n  if (!reg.test(value)) {\n    callback(new Error('请输入整数'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证正整数\n */\nexport function validatePositiveInteger(rule, value, callback) {\n  if (!value && value !== 0) {\n    callback()\n    return\n  }\n\n  const reg = /^\\d+$/\n  const num = parseInt(value, 10)\n\n  if (!reg.test(value) || num <= 0) {\n    callback(new Error('请输入正整数'))\n  } else {\n    callback()\n  }\n}\n\n/**\n * 验证范围\n */\nexport function validateRange(min, max) {\n  return function (rule, value, callback) {\n    if (!value && value !== 0) {\n      callback()\n      return\n    }\n\n    const num = Number(value)\n    if (isNaN(num)) {\n      callback(new Error('请输入数字'))\n    } else if (num < min || num > max) {\n      callback(new Error(`请输入${min}-${max}之间的数字`))\n    } else {\n      callback()\n    }\n  }\n}\n\n/**\n * 验证长度范围\n */\nexport function validateLength(min, max) {\n  return function (rule, value, callback) {\n    if (!value) {\n      callback()\n      return\n    }\n\n    const length = value.length\n    if (length < min || length > max) {\n      callback(new Error(`长度必须在${min}-${max}之间`))\n    } else {\n      callback()\n    }\n  }\n}\n"],"names":[],"mappings":"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"}